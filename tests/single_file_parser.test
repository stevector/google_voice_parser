<?php

/**
 * @file
 * Tests of parser.
 */

require '../vendor/autoload.php';

// @todo, organize code into classes.
require '../index.php';



use Symfony\Component\DomCrawler\Crawler;


/**
 * Unit tests for csv functions.
 *
 * @todo, these functions might belong in there own class totally independent
 * of Drupal. These tests could then be done through PHPUnit.
 */
class GoogleVoiceFileParserUnitTests extends PHPUnit_Framework_TestCase  {

  /**
   * Get a the file path of a test csv file.
   */
  protected function getTestHtmlFilePath($name) {
    // @todo, eventually there may need to be a more robust way of going from
    // a name variable to a full path.
    return  'test_html/Test Sender - Text - 2013-09-27T11_26_44Z.html';
  }

  public function dataProviderTestOfSingleFile() {
    return array(
      array(
        $this->getTestHtmlFilePath('todo'),
        $this->getExpectedSingleResultsArray(),
      )
    );
  }

  /**
   * Unit test of field_creator_csvToArray().
   *
   * @dataProvider dataProviderTestOfSingleFile
   */
  public function testOfSingleFile($expected_html_path, $expected_array) {

    $derived_array = singleFileParser($expected_html_path);
    $this->assertTRUE($derived_array === $expected_array, 'The expected array is identical to the derived array');

    // Verify that a small change to a value in the derived_array results
    // in un-identical arrays.
    $derived_array[0]['message'] .= ' ';
    $this->assertTrue($expected_array !== $derived_array, 'The expected array is not identical to the derived array');
  }

  public function getExpectedSingleResultsArray() {

    $return = array(
      array(
        'time' => '2013-09-27T11:26:44.258Z',
        'sender_number' => 'tel:+14145551234',
        'sender_name' => 'Test Sender',
        'message' => 'Late start, more like 8 am',
      ),
      array(
        'time' => '2013-09-27T11:29:16.322Z',
        'sender_number' => 'tel:+17735551234',
        'sender_name' => 'Me',
        'message' => 'Ok',
      ),
    );

    return $return;
  }
}
